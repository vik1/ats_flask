from flask import Flask, render_template, request, redirect, url_for
import csv, os
from werkzeug.utils import secure_filename

app = Flask(__name__)
app.config['UPLOAD_FOLDER'] = 'uploads'
DATA_FILE = 'applicants.csv'
HEADERS = ['Name', 'Email', 'Phone', 'Position', 'ResumePath']

# Ensure required files/folders exist
os.makedirs(app.config['UPLOAD_FOLDER'], exist_ok=True)
if not os.path.exists(DATA_FILE):
    with open(DATA_FILE, 'w', newline='') as f:
        writer = csv.writer(f)
        writer.writerow(HEADERS)

def read_applicants():
    with open(DATA_FILE, 'r') as f:
        return list(csv.DictReader(f))

def write_applicants(applicants):
    with open(DATA_FILE, 'w', newline='') as f:
        writer = csv.DictWriter(f, fieldnames=HEADERS)
        writer.writeheader()
        writer.writerows(applicants)

@app.route('/')
def index():
    applicants = read_applicants()
    return render_template('index.html', applicants=applicants)

@app.route('/add', methods=['GET', 'POST'])
def add():
    if request.method == 'POST':
        data = request.form
        resume = request.files['resume']
        filename = secure_filename(resume.filename)
        resume_path = os.path.join(app.config['UPLOAD_FOLDER'], filename)
        resume.save(resume_path)

        with open(DATA_FILE, 'a', newline='') as f:
            writer = csv.writer(f)
            writer.writerow([
                data['name'],
                data['email'],
                data['phone'],
                data['position'],
                resume_path
            ])
        return redirect(url_for('index'))
    return render_template('add.html')

@app.route('/delete/<email>')
def delete(email):
    applicants = read_applicants()
    applicants = [a for a in applicants if a['Email'] != email]
    write_applicants(applicants)
    return redirect(url_for('index'))

@app.route('/modify/<email>', methods=['GET', 'POST'])
def modify(email):
    applicants = read_applicants()
    applicant = next((a for a in applicants if a['Email'] == email), None)
    if not applicant:
        return "Applicant not found", 404

    if request.method == 'POST':
        data = request.form
        resume = request.files.get('resume')
        if resume and resume.filename:
            filename = secure_filename(resume.filename)
            resume_path = os.path.join(app.config['UPLOAD_FOLDER'], filename)
            resume.save(resume_path)
        else:
            resume_path = applicant['ResumePath']

        updated = {
            'Name': data['name'],
            'Email': data['email'],
            'Phone': data['phone'],
            'Position': data['position'],
            'ResumePath': resume_path
        }

        applicants = [updated if a['Email'] == email else a for a in applicants]
        write_applicants(applicants)
        return redirect(url_for('index'))

    return render_template('modify.html', applicant=applicant)

